name: Publish
on:
  workflow_call:
    inputs:
      owner:
        description: 'Repository owner'
        required: true
        type: string
      image:
        description: 'Image to be built'
        required: true
        type: string
      tag:
        description: 'Tag to be used for the image'
        required: true
        type: string
      revision:
        description: 'Revision to be used for the image'
        required: true
        type: string
    secrets:
      docker_hub_token:
        description: 'Access Token to be used to push to Docker Hub'
        required: true
      gcr_token:
        description: 'Personal Access Token to be used to push to GitHub Container Registry'
        required: true
jobs:
  publish-to-docker-hub:
    name: Publish to Docker Hub (${{ inputs.image }})
    timeout-minutes: 5
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Generate date
        id: source-date
        run: |
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%S)" >> ${GITHUB_OUTPUT}
          echo "epoch=$(date -u +%s)" >> ${GITHUB_OUTPUT}
        shell: sh
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.owner }}
          password: ${{ secrets.docker_hub_token }}
      - name: Publish to Docker Hub
        uses: hpedrorodrigues/chainguard-actions/apko-snapshot@dev
        with:
          config: ${{ inputs.image }}/${{ inputs.image }}.apko.yaml
          base-tag: docker.io/${{ inputs.owner }}/${{ inputs.image }}
          target-tag: latest
          additional-tags: ${{ inputs.tag }}
          sbom-attest: true
          slsa-attest: true
          generic-user: ${{ inputs.owner }}
          generic-pass: ${{ secrets.docker_hub_token }}
          annotations: org.opencontainers.image.revision:${{ inputs.revision }},org.opencontainers.image.created:${{ steps.source-date.outputs.date }},org.opencontainers.image.version:${{ inputs.tag }}
          source-date-epoch: ${{ steps.source-date.outputs.epoch }}
  publish-to-gcr:
    name: Publish to GitHub Container Registry (${{ inputs.image }})
    timeout-minutes: 5
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Generate date
        id: source-date
        run: |
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%S)" >> ${GITHUB_OUTPUT}
          echo "epoch=$(date -u +%s)" >> ${GITHUB_OUTPUT}
        shell: sh
      - name: Publish to GitHub Container Registry
        uses: hpedrorodrigues/chainguard-actions/apko-snapshot@dev
        with:
          config: ${{ inputs.image }}/${{ inputs.image }}.apko.yaml
          base-tag: ghcr.io/${{ inputs.owner }}/${{ inputs.image }}
          target-tag: latest
          additional-tags: ${{ inputs.tag }}
          sbom-attest: true
          slsa-attest: true
          generic-user: ${{ inputs.owner }}
          generic-pass: ${{ secrets.gcr_token }}
          annotations: org.opencontainers.image.revision:${{ inputs.revision }},org.opencontainers.image.created:${{ steps.source-date.outputs.date }},org.opencontainers.image.version:${{ inputs.tag }}
          source-date-epoch: ${{ steps.source-date.outputs.epoch }}
